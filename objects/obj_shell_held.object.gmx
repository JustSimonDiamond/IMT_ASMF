<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_holdparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A shell being held

//Do not animate
image_speed = 0

//Whether the object is being held
held = 1

//Force Mario to hold this
with (obj_playerparent) holding = 2

//Number of kills
hitpoint = 0

//Is there a Koopa inside?
koopainside = false;

//Shake variable
offset = 0

//Por si acaso
inwall = false;

//Shake
alarm[0] = 540

//Convert into a koopa again
alarm[1] = 600
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Convertirse en un Koopa (U otra mierda, quien sabe)
if (koopainside) 
{
//Cambia esta wea dependiendo del indice de sprite
switch(sprite_index) 
{
    
    //Koopa verde (Al revés)
    case(spr_shell_down): {
        instance_create(x+8,y,obj_koopa);
    } break;
        
    //Koopa rojo
    case(spr_shell_red): {
        instance_create(x+8,y,obj_koopa_red);
    } break;
        
    //Koopa rojo (Al revés)
    case(spr_shell_red_down): {
        instance_create(x+8,y,obj_koopa_red);
    } break;
        
    //Buzzy Beetle
    case(spr_shell_buzzy): { 
        instance_create(x+8,y,obj_buzzybeetle);
    } break;
        
    //Buzzy Beetle (Al revés)
    case(spr_shell_buzzy_down): { 
        instance_create(x+8,y,obj_buzzybeetle);
    } break;
        
    //Spiny (Al revés)
    case(spr_spiny_dead): { 
        instance_create(x+8,y,obj_spiny);
    } break;
        
    //Koopa verde
    default: {
        instance_create(x+8,y,obj_koopa);
    } break;
}
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sacudir
if (koopainside) 
{
    if (offset == 1)
        offset = -1;
    else
        offset = 1;
    alarm[0] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt enemies
if other.hardness &lt; 99
{
    scr_musicalscale(id,other.id,1)
    with other event_user(0)
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default throw / kick event.

//If 'Up' is pressed, throw it upwards.
if (keyboard_check(vk_up)) {

    //Play 'Kick' sound.
    audio_play_sound(snd_kick, 0, false);
    
    //Create hit
    with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;
    
    //If the item is not overlapping a solid.
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) 
    {
        
        //Set the horizontal speed
        hspeed = obj_playerparent.hspeed/2;
        
        //If the item is not in a water surface
        if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_swim,0,0))
            vspeed = -7;
            
        //Otherwise
        else {

            vspeed = -3.5;
            //swimming = true;
        }
        
        with (instance_create(x,y,obj_shell))
        {
            sprite_index = other.sprite_index;   
            koopainside = other.koopainside;
            vspeed = other.vspeed;
        }
        
        instance_destroy()
    }
    
    //Otherwise, kill it
    else {
    
        //Create dead object
        with (instance_create(x,y,obj_enemy_dead)) {
        
            sprite_index = other.sprite_index;
            image_xscale = other.image_xscale;
        }
    
        //Get 100 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score_new)) event_user(1);
        
        //Destroy
        instance_destroy();  
    }
}

//Otherwise, if 'Down' is pressed.
else if (keyboard_check(vk_down)) {
    
    //Check if the object is stuck on a solid and move it
    if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_solid,0,0)) {
    
        //Move it to a safe position
        inwall = true;
        
        //Stop it
        hspeed = 0;
    }
    
    //If there's not a slope in place...
    if (!collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_slopeparent,1,0))
        hspeed = 0.5*obj_playerparent.direct;
    
    //Otherwise
    else
        vspeed = 0.1;    
        
    //Bro, si esto no te funciona entonces quítalo
    with (instance_create(x,y,obj_shell)) 
    {
        sprite_index = other.sprite_index;
        koopainside = other.koopainside;
    }
    instance_destroy();
}

//Otherwise, throw it to the side.
else if (vspeed &gt;= 0) {
        
    //Play 'Kick' sound.
    audio_play_sound(snd_kick, 0, false);

    //Kill instantly if in contact with a solid
    if (place_meeting(x,y,obj_solid)) {
    
        //Create dead object
        with (instance_create(x,y,obj_enemy_dead)) {
        
            sprite_index = other.sprite_index;
            image_xscale = other.image_xscale;
        }
    
        //Get 100 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,y,obj_score_new)) event_user(1);
        
        //Destroy
        instance_destroy();  
    }
    else {
    
        //Create moving shell
        with (instance_create(x,y,obj_shell)) {
                        
            //Set the same sprite
            sprite_index = other.sprite_index;
            
            //If a koopa is inside
            koopainside = other.koopainside;    
            
            //Set the previous hspeed
            prevhspeed = 2.7*sign(obj_playerparent.direct);
            
            //Set the horizontal speed based on the facing direction
            hspeed = 2.7*sign(obj_playerparent.direct);                                       
    
            event_user(15)
        }
    }
        
    //Create hit
    with (instance_create(x,y,obj_smoke)) sprite_index = spr_spinthump;
    
    //Destroy
    instance_destroy();
}

/*
///Throw as a shell

//Slope fix
while collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom,obj_slopeparent,1,0)
    y--

//Make a regular shell
with instance_create(x,y,obj_shell)
{
    sprite_index = other.sprite_index
    hspeed = 3*obj_playerparent.direct
    event_user(15)
}

audio_play_sound(snd_kick,0,0);

//Destroy
instance_destroy()
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shell death
with instance_create(round(x),round(y+16),obj_enemy_dead) sprite_index = other.sprite_index

//Destroy
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar

draw_sprite_ext(sprite_index,image_index,x+offset,y,image_xscale,image_yscale,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
