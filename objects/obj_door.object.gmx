<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A door

/*
**  This item uses creation code!
**
**  postchange = Pick from below: (Optional)
**      0: Mario
**      1: Warp Mario
**      2: Jump Spawn
**      3: Climb Spawn
**
**  postx   = New x coordinate
**  posty   = New y coordinate
**  myroom  = Destination room (Optional)
**
**  locked  = Is this door locked with a key or blocked with wood?
**      0: No lock
**      1: Locked with key
**      2: Blocked with wood
*/

//Default Values:
postchange = -1;
postx = x;
posty = y;
locked = 0;
myroom = room_next(room);

//Do not animate
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warp to another room

//If the position needs to be changed in the new room.
if (postchange != -1) {

    //Remember the spawn type
    global.postchange = postchange;
    
    //Remember the x spawn position.
    global.postx = postx+8;
    
    //Remember the y spawn position.
    global.posty = posty;
}

//Go to the assigned room.
if (instance_number(obj_fadein) == 0)
    with (instance_create(0,0,obj_fadein)) target = other.myroom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warp the player to another location

//Do not open if locked
if (locked != 0)
exit;

//If the player does exist
if (instance_exists(obj_playerparent)) {

    //If the player is overlapping the door
    var mario = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_playerparent,0,0);
    if (mario)
    &amp;&amp; (mario.state &lt; 2)
    &amp;&amp; (keyboard_check(vk_up)) {
    
        //Play 'Door' sound
        audio_play_sound(snd_door, 0, false);
        
        //Animate
        image_speed = 0.15;
        
        //Make the player enter the door
        instance_create(x+8,y-16,obj_doormario);
        
        //Destroy the player
        with (obj_playerparent) instance_destroy();
        
        //Warp to the assigned room
        alarm[0] = 55;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blast the wooden planks

//Play 'Break' sound
audio_play_sound(snd_break, 0, false);

//Create shards
with (instance_create(x+8,y+8,obj_shard))
    motion_set(45, 6);
with (instance_create(x+8,y+8,obj_shard))
    motion_set(60, 6);
with (instance_create(x+8,y+8,obj_shard))
    motion_set(120, 6);
with (instance_create(x+8,y+8,obj_shard))
    motion_set(135, 6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End animation

image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If this door was opened before, unlock it.
/*
if (ds_map_find_value(global.doors, id) == 1)   
    locked = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the door

//Draw the inside part of the door if the door is opening
if (image_index &lt; 4) then draw_sprite(spr_door_inside, 0, round(x), round(y));

//Draw the door
draw_sprite(sprite_index,-1, round(x), round(y));

//If the door is blocked with wood
if (locked == 2) 
    draw_sprite(spr_door, 0, round(x), round(y));
    
//Otherwise, if the door is locked with a key
else if (locked == 1) 
    draw_sprite(spr_door_locked, 0, round(x), round(y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
