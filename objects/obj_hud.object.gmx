<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_manager</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The Level's HUD

//Variable de animación
anim = 0

//The general HUD's alpha
hudalpha = 0.7;

//The HUD's timer alpha
timeralpha = hudalpha;

//The HUD's reserve item alpha
reservealpha = hudalpha;

//Need to draw the time count?
drawtime = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment animation variable
anim++

//Continue incrementing
alarm[5] = 7
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lógica del HUD

//Copiar todo el tiempo los valores del levelmanager
if (instance_exists(obj_levelmanager)) 
{
    myobj = obj_levelmanager;
    hudalpha = myobj.hudalpha;
    timeralpha = myobj.timeralpha;
    reservealpha = myobj.reservealpha;
    anim = myobj.anim;
}
if (global.timer != 0)
    drawtime = true;
else
    drawtime = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws the HUD

//Set the font
draw_set_font(global.grdigits);

//Set the draw alpha
draw_set_alpha(hudalpha);

//Draw the HUD bar
draw_sprite_ext(spr_hudbar,0,view_xview[0]+15,view_yview[0]+175,1,1,0,c_white,reservealpha);

//Draw the lives
if (global.livesmode)
{
    if (global.player == 0)
    {
        draw_sprite_ext(spr_mariohud,0,view_xview[0]+15,view_yview[0]+30,1,1,0,c_white,hudalpha);
    }
    else if (global.player == 1)
    {
        draw_sprite_ext(spr_luigihud,0,view_xview[0]+15,view_yview[0]+30,1,1,0,c_white,hudalpha);
    }
    else
    {
        draw_sprite_ext(spr_noplayerhud,0,view_xview[0]+15,view_yview[0]+30,1,1,0,c_white,hudalpha);
    }
    draw_text(view_xview[0]+40,view_yview[0]+33,string_format(lives,2,0));
}
//Draw the score
draw_set_font(global.scoredigits)
draw_set_alpha(timeralpha);
if (drawtime)
    draw_text(view_xview[0]+300,view_yview[0]+30,string_add_zeros(score,7));
else
    draw_text(view_xview[0]+300,view_yview[0]+7,string_add_zeros(score,7));
draw_set_font(global.grdigits)
draw_set_alpha(hudalpha);

//Draw the coin count
draw_set_font(global.cdigits);
draw_sprite_ext(spr_coinhud,0,view_xview[0]+20,view_yview[0]+8,1,1,0,c_white,hudalpha);
draw_text(view_xview[0]+40,view_yview[0]+7,string_add_zeros(global.coins,2));

//Draw the time
draw_set_alpha(timeralpha);
draw_set_font(global.grdigits);
if (drawtime)
{
    draw_sprite_ext(spr_timehud, 0, view_xview[0]+300, view_yview[0]+9, 1, 1, 0, c_white, timeralpha);
    draw_text(view_xview[0]+320, view_yview[0]+7, string_add_zeros(global.timer,3));
}
draw_set_alpha(hudalpha);

//Draw the P-Meter
if (global.powerup == cs_leaf
|| global.powerup == cs_tanooki
|| global.powerup == cs_goldtan)
{
    draw_sprite_ext(spr_pmeter,global.pmeter,view_xview[0]+16,view_yview[0]+204,1,1,0,c_white,hudalpha);
}
//Draw the reserve items
if (global.reserveitem == cs_fire
|| global.reserveitem == cs_ice
|| global.reserveitem == cs_boomerang
|| global.reserveitem == cs_super
|| global.reserveitem == cs_hammer)
{
    draw_sprite_ext(scr_constant_get_sprite(global.reserveitem),anim,view_xview[0]+20,view_yview[0]+180,1,1,0,c_white,reservealpha);
}
else if (global.reserveitem != cs_small)
{
    draw_sprite_ext(scr_constant_get_sprite(global.reserveitem),0,view_xview[0]+20,view_yview[0]+180,1,1,0,c_white,reservealpha);
}

//Reset the draw alpha
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
