<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_big_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_playerparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///An overpowered simp that fight with turtles and its friendzoned by a prustitute princess
event_inherited()

global.player = 0

blend_star = c_white;

//Mario's current state
//0: Stand, 1: Walk, 2: Jump, 3: Climb, 4: Wall Climb/Jump
state = 0

//Mario's direction
//-1: Left, 1: Right
direct = 1

//Whether Mario is holding something
//0: Nothing, 1: Overhead, 2: On Front 3: Can't Hold Stuff
holding = 0

//Variable jump state
//0: Can Jump, 1: Variable Jump, 2: No Variable Jump
jumpnow = 0

//Is Mario skidding?
skidnow = 0

//Is Mario swimming?
isswim = 0

//Is Mario ducking?
isduck = 0

//Is Mario invincible?
//0: Normal, 1: Invincible, -1: Phase through
invincible = 0

//Is Mario smacking a net?
netsmack = 0

//Is Mario kicking something?
iamkicking = 0

//Is Mario spin jumping?
stompstyle = 0

//Is Mario on a slippery surface?
isslip = 0

//Is Mario's controls disabled?
disablecontrols = 0

//Is carrot/bee Mario floating?
isfloating = 0

//Is the float sound effect playing?
floatnow = 0

//How much longer can bee/crown Mario fly/float?
powerupfly = 0

//Did Mario wall jump?
walljump = 0

//Did squirrel Mario propel upwards yet?
squirrelpropel = 0

//Did Mario double jump?
doublejump = 0

//Is Mario firing a projectile?
firing = 0

//Is leaf/tanooki Mario wiggling his tail?
wiggle = 0

//What direction is frog/penguin Mario swimming in?
swimtype = 0

//Is frog/penguin Mario's swim sound effect looping?
noisy = 0

//Is Mario flashing?
isflashing = 0

//How many consecutive stomps has Mario made?
hitpoint = 0

//State delay variable
statedelay = 0

//Handles Mario's skid smoke
alarm[5] = 8

//Handles Mario's underwater bubbles
alarm[9] = 24 + random(96)

//Did Mario carry something over from another room?
if global.shallihold &gt; 0
{
    holding = global.shallihold
    global.shallihold = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles powerup specific projectiles, tail spinning, and statue morphing
if disablecontrols = 0
and holding = 0
and stompstyle = 0
{

    //Tanooki Statue
    if global.powerup = cs_tanooki
    and not instance_exists(obj_spinner)
    and keyboard_check(vk_down)
        instance_create(x,y,obj_statue)

    //If Mario is not ducking
    else if isduck = 0
    {

        //Fire Ball
        if global.powerup = cs_fire
        and instance_number(obj_fireball) &lt; 2
        {
            firing = 9
            with instance_create(x,y+16,obj_fireball) hspeed = 3*other.direct
        }

        //Hammer
        else if global.powerup = cs_hammer
        and instance_number(obj_hammer) &lt; 2
        {
            firing = 9
            with instance_create(x,y+16,obj_hammer) hspeed = 1.5*other.direct+other.hspeed
        }

        //Tail Spin
        else if (global.powerup = cs_leaf or global.powerup = cs_tanooki or global.powerup = cs_goldtan)
        and not instance_exists(obj_spinner)
            instance_create(x,y,obj_spinner)

        //Bomb
        else if global.powerup = cs_bomb
        and instance_number(obj_minibomb) &lt; 1
        {
            firing = 9
            with instance_create(x-4,y+16,obj_minibomb) hspeed = 1.5*other.direct+other.hspeed
        }

        //Ice Ball
        else if (global.powerup = cs_ice or (global.powerup = cs_penguin and isswim = 0))
        and instance_number(obj_iceball) &lt; 2
        {
            firing = 9
            with instance_create(x,y+16,obj_iceball) hspeed = 3*other.direct
        }

        //Super Ball
        else if global.powerup = cs_super
        and instance_number(obj_superball) &lt; 2
        {
            firing = 9
            with instance_create(x,y+16,obj_superball) hspeed = 2*other.direct
        }

        //Shuriken
        else if global.powerup = cs_ninja
        and instance_number(obj_shuriken) &lt; 2
        {
            firing = 9
            with instance_create(x,y+20,obj_shuriken) hspeed = 5*other.direct
        }

        //Boomerang
        else if global.powerup = cs_boomerang
        and instance_number(obj_boomerang_b) &lt; 2
        {
            firing = 9
            with instance_create(x-8,y+16,obj_boomerang_b) hspeed = 2*other.direct
        }

        //Rock Roller
        else if global.powerup = cs_rock
        and not instance_exists(obj_rockroller)
            instance_create(x,y+10,obj_rockroller)

        //Pyre Ball
        else if global.powerup = cs_pyre
        and instance_number(obj_pyreball) &lt; 2
        {
            firing = 9
            with instance_create(x,y+16,obj_pyreball) hspeed = 3*other.direct
        }

        //Karate Attack
        else if global.powerup = cs_karate
        and not instance_exists(obj_karateattack)
            instance_create(x,y,obj_karateattack)

    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Mario's second spin jump projectile

//Fire Ball
if global.powerup = cs_fire
and instance_number(obj_fireball) &lt; 2
    with instance_create(x,y+16,obj_fireball) hspeed = -3*other.direct

//Hammer
else if global.powerup = cs_hammer
and instance_number(obj_hammer) &lt; 2
    with instance_create(x,y+16,obj_hammer) hspeed = -1.5*other.direct

//Ice Ball
else if (global.powerup = cs_ice or global.powerup = cs_penguin)
and instance_number(obj_iceball) &lt; 2
    with instance_create(x,y+16,obj_iceball) hspeed = -3*other.direct

//Super Ball
else if global.powerup = cs_super
and instance_number(obj_superball) &lt; 2
    with instance_create(x,y+16,obj_superball) hspeed = -2*other.direct

//Shuriken
else if global.powerup = cs_ninja
and instance_number(obj_shuriken) &lt; 2
    with instance_create(x,y+20,obj_shuriken) hspeed = -5*other.direct

//Pyre Ball
else if global.powerup = cs_pyre
and instance_number(obj_pyreball) &lt; 2
    with instance_create(x,y+16,obj_pyreball) hspeed = -3*other.direct
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Mario's first spin jump projectile

//Fire Ball
if global.powerup = cs_fire
and instance_number(obj_fireball) &lt; 2
    with instance_create(x,y+16,obj_fireball) hspeed = 3*other.direct

//Hammer
else if global.powerup = cs_hammer
and instance_number(obj_hammer) &lt; 2
    with instance_create(x,y+16,obj_hammer) hspeed = 1.5*other.direct

//Ice Ball
else if (global.powerup = cs_ice or global.powerup = cs_penguin)
and instance_number(obj_iceball) &lt; 2
    with instance_create(x,y+16,obj_iceball) hspeed = 3*other.direct

//Super Ball
else if global.powerup = cs_super
and instance_number(obj_superball) &lt; 2
    with instance_create(x,y+16,obj_superball) hspeed = 2*other.direct

//Shuriken
else if global.powerup = cs_ninja
and instance_number(obj_shuriken) &lt; 2
    with instance_create(x,y+20,obj_shuriken) hspeed = 5*other.direct

//Pyre Ball
else if global.powerup = cs_pyre
and instance_number(obj_pyreball) &lt; 2
    with instance_create(x,y+16,obj_pyreball) hspeed = 3*other.direct

//Second Projectile
alarm[8] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset holding variable
holding = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles Mario's sprites

//Disable ducking for certain powerups
if global.powerup = cs_frog
    isduck = 0

//If Mario is not ducking
if isduck = 0
{

    //Select Mask
    if global.powerup = cs_small
        mask_index = spr_smallmask
    else
        mask_index = spr_bigmask

    //Shoot Animation
    if global.powerup = cs_fire
    or global.powerup = cs_hammer
    or global.powerup = cs_bomb
    or global.powerup = cs_ice
    or global.powerup = cs_super
    or global.powerup = cs_ninja
    or global.powerup = cs_penguin
    or global.powerup = cs_boomerang
    or global.powerup = cs_pyre
    {
        if firing &gt; 0
            firing--
    }
    else
        firing = 0

    //Tail Wiggling
    if global.powerup = cs_leaf
    or global.powerup = cs_tanooki
    or global.powerup = cs_goldtan
    {
        if state = 2
        and stompstyle = 0
        {
            if global.powerup = cs_leaf
                sprite_index = spr_mario_leaf_fall;
            else if global.powerup = cs_tanooki
                sprite_index = spr_mario_tanooki_fall;
            else if global.powerup = cs_goldtan
                sprite_index = spr_mario_goldtan_fall;
            if wiggle &gt; 1
                wiggle--
            if wiggle &gt; 12
                image_index = 3
            else if wiggle &gt; 8
                image_index = 2
            else if wiggle &gt; 4
                image_index = 1
            else if wiggle &gt; 1
                image_index = 2
            else if wiggle = 1
                image_index = 1
            else
                image_index = 0
        }
        else
            wiggle = 0
    }
    else
        wiggle = 0

    //Not Holding Anything
    if holding = 0
    {

        //Standing State
        if state = 0
        {

            //Shooting Projectiles
            if firing &gt; 0
            {
                image_speed = 0
                if firing &lt; 6 and firing &gt; 3
                    image_index = 1
                else
                    image_index = 0
                sprite_index = scr_marioshoot()
            }

            //Default Standing
            else
            {
                image_speed = 0.15
                sprite_index = scr_marioidle()
            }

        }

        //Walking State
        else if state = 1
        {

            //Animate based on horizontal speed
            image_speed = abs(hspeed/7.5)

            //Frog Mario only walks
            if global.powerup = cs_frog
                sprite_index = scr_mariowalk()

            //Skid when moving and facing in opposite directions
            else if (direct = 1 and hspeed &lt; -0.001)
            or (direct = -1 and hspeed &gt; 0.001)
            {
                sprite_index = scr_marioskid()
                if skidnow = 0
                {
                    skidnow = 1
                    audio_play_sound(snd_skid,1,1)
                }
            }

            //Default Walking
            else
            {

                //Run only when P-Meter is full
                if obj_levelmanager.pmeter &lt; 6
                    sprite_index = scr_mariowalk()
                else
                    sprite_index = scr_mariorun()

            }

        }

        //Jumping State
        else if state = 2
        {

            //Swimming
            if isswim = 1
            {

                //If frog/penguin Mario is not swimming
                if noisy = 0
                {
                    sprite_index = scr_marioswim()
                    image_speed = 0
                    if vspeed &lt; 0
                        image_index = 1
                    else
                        image_index = 0
                }

            }

            //Spin Jumping
            else if stompstyle = 1
            {

                //Propeller Mario Flying
                if global.powerup = cs_propeller
                {

                    //Propeller Mario floating down slowly
                    if vspeed &gt; 0
                    and vspeed &lt; 2
                    {
                        image_speed = 0.15
                        sprite_index = spr_mario_propeller_slow
                    }

                    //Default propeller Mario flying
                    else
                    {
                        image_speed = vspeed/10
                        sprite_index = spr_mario_propeller_fly
                    }

                }

                //Default Spin Jumping
                else
                {
                    image_speed = 0.5
                    sprite_index = scr_mariospin()
                }

            }

            //Shooting Projectiles
            else if firing &gt; 0
            {
                image_speed = 0
                if firing &lt; 6 and firing &gt; 3
                    image_index = 1
                else
                    image_index = 0

                //Penguin Mario Hotfix
                if global.powerup = cs_penguin
                    sprite_index = spr_mario_penguin_shoot2
                else
                    sprite_index = scr_marioswim()

            }

            //Default Jumping
            else
            {

                //Floating Animation
                if global.powerup = cs_carrot
                or global.powerup = cs_bee
                {
                    if isfloating = 1
                        image_speed = 0.15
                    else
                        image_index = 0
                }
                //Squirrel Mario floating
                if global.powerup = cs_squirrel
                and (squirrelpropel = 1 or (vspeed &gt; 0 and keyboard_check(vk_shift)))
                {
                    sprite_index = spr_mario_squirrel_float
                    if vspeed &lt; 0
                        image_index = 0
                    else if squirrelpropel = 0
                        image_index = 1
                    else
                        image_speed = 0.15
                }

                //Swooper Mario flapping
                else if global.powerup = cs_swooper
                and powerupfly = 1
                {
                    sprite_index = spr_mario_swooper_flap
                    if vspeed &gt; 0
                        image_index = 0
                    else
                        image_index = 1
                }

                //Super Crown Mario floating
                else if global.powerup = cs_crown
                and vspeed &gt;= 0
                {
                    image_speed = 0.15
                    if vspeed &gt; 0
                        sprite_index = spr_mario_crown_fall
                    else
                        sprite_index = spr_mario_crown_float
                }

                //Run only when P-Meter is full
                else if obj_levelmanager.pmeter &lt; 6
                {
                    sprite_index = scr_mariojump()
                    if vspeed &gt; 0
                        image_index = 1
                    else
                        image_index = 0
                }
                else
                {
                    sprite_index = scr_mariorunjump()
                    if vspeed &gt; 0
                        image_index = 1
                    else
                        image_index = 0
                }

            }

        }

        //Special Swimming Animations
        if global.powerup = cs_frog
        or global.powerup = cs_penguin
        {
            if isswim = 1
            {
                if swimtype = 0
                    sprite_index = scr_marioswim()
                if swimtype = 1
                    sprite_index = scr_marioswim2()
                if swimtype = 2
                    sprite_index = scr_marioswim3()
                if noisy = 1
                    image_speed = 0.15
                else
                    image_speed = 0
            }
        }

    }

    //Holding Something
    else
    {

        //Standing State
        if state = 0
        {
            image_speed = 0
            image_index = 0.99
        }

        //Walking State
        if state = 1
            image_speed = abs(hspeed/7.5)

        //Jumping State
        if state = 2
        {
            image_speed = 0
            if global.powerup = cs_small
                image_index = 2
            else
                image_index = 3
        }

        //Carrying an item above his head
        if holding = 1
            sprite_index = scr_mariocarry()

        //Holding an item on front of him
        else if holding = 2
            sprite_index = scr_mariohold()

    }

    //Climbing
    if state = 3
    {
        if speed = 0
            image_speed = 0
        else
            image_speed = 0.15
        sprite_index = scr_marioclimb()
    }

    //Wall Climbing + Wall Jumping
    else if state = 4
    {

        //Ninja Mario Wall Climbing
        if global.powerup = cs_ninja
        {
            sprite_index = spr_mario_ninja_wallclimb
            if vspeed = 0
                image_speed = 0
            else
                image_speed = 0.15
        }

        //Wall Jumping
        else
        {
            sprite_index = scr_mariowalljump()
            if skidnow = 0
            //and global.powerup != cs_squirrel
            {
                skidnow = 1
            }
        }

    }

    //Kicking Animation
    if iamkicking = 1
        sprite_index = scr_mariokick()

}

//If Mario is ducking
else if isduck = 1
{

    //Use Small Mask
    mask_index = spr_smallmask

    //Default Ducking
    sprite_index = scr_marioduck()

}

//Stop the skid sound effect
if sprite_index != scr_marioskid()
or sprite_index != scr_mariowalljump()
and skidnow = 1
{
    audio_stop_sound(snd_skid)
    skidnow = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws Mario

//Draw Mario
draw_sprite_ext(sprite_index,image_index,round(x),round(y),direct,1,0,c_white,image_alpha)
if(instance_exists(obj_invincibility)){
repeat(2){
            
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,round(x),round(y),direct,1,0,blend_star,image_alpha)
    draw_set_blend_mode(bm_normal);
};
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,-16</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
