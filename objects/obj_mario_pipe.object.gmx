<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mask32x32</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///El jugador cuando entra en una tubería
/*
** Yo sé que copiar código sin permiso no está permitido, pero por favor,
** ambos son fangames, by the way si intentan joderme a ambos nos joden xd
*/
dir = 0
spr = 0
if (direction == 0)
    dir = 0
else if (direction == 180)
    dir = 180
else if (direction == 90)
    dir = 90
else if (direction == 270)
    dir = 270
change = 0
alarm[1] = 18
ready = 0
audio_play_sound(snd_clearpipe_start,0,0)
hsp = 0
vsp = 0

blend_star = c_white
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crear al jugador del otro lado
with (player_retrieve(x+16,y)) //(instance_create((x + 16), (y), obj_player))
{
    hspeed = other.hsp
    vspeed = other.vsp
}
instance_destroy()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reproducir el audio cuando el jugador entra a la tubería
ready = 1
audio_play_sound(snd_clearpipe_in,0,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Avisar si el cambio está listo
change = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lógica de la tubería
var hrb, vrb;
hrb = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_line_h, 0, 0)
vrb = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_line_v, 0, 0)
if (direction == 0)
    spr = 0
else if (direction == 180)
    spr = 1
if (dir &gt; direction)
    dir -= 30
else if (dir &lt; direction)
    dir += 30
if ((!hrb) &amp;&amp; direction == 180 &amp;&amp; ready == 1)
{
    hsp = -2
    vsp = -2
    event_user(0)
}
else if ((!hrb) &amp;&amp; direction == 0 &amp;&amp; ready == 1)
{
    hsp = 2
    vsp = -2
    event_user(0)
}
else if ((!vrb) &amp;&amp; direction == 90 &amp;&amp; ready == 1)
{
    hsp = 0
    vsp = -4
    event_user(1)
}
else if ((!vrb) &amp;&amp; direction == 270 &amp;&amp; ready == 1)
{
    hsp = 0
    vsp = 4
    event_user(0)
}
if hrb
{
    if (bbox_right &gt;= hrb.bbox_right &amp;&amp; direction == 0 &amp;&amp; place_snapped(16, 16))
    {
        if (vrb &amp;&amp; bbox_bottom == vrb.bbox_bottom &amp;&amp; place_snapped(16, 16))
        {
            direction = 90
            move_snap(16, 16)
        }
        else if (vrb &amp;&amp; bbox_top == vrb.bbox_top &amp;&amp; place_snapped(16, 16))
        {
            direction = 270
            move_snap(16, 16)
        }
        else if (vrb &amp;&amp; place_snapped(16, 16) &amp;&amp; (direction == 0 || direction == 180) &amp;&amp; change == 0)
        {
            if (keyboard_check(vk_up) &amp;&amp; (!keyboard_check(vk_down)))
            {
                direction = 90
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else if ((!keyboard_check(vk_up)) &amp;&amp; keyboard_check(vk_down))
            {
                direction = 270
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else
            {
                direction = 90
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
        }
    }
    else if (bbox_left &lt;= hrb.bbox_left &amp;&amp; direction == 180 &amp;&amp; place_snapped(16, 16))
    {
        if (vrb &amp;&amp; bbox_bottom == vrb.bbox_bottom &amp;&amp; place_snapped(16, 16))
        {
            direction = 90
            move_snap(16, 16)
        }
        else if (vrb &amp;&amp; bbox_top == vrb.bbox_top &amp;&amp; place_snapped(16, 16))
        {
            direction = 270
            move_snap(16, 16)
        }
        else if (vrb &amp;&amp; place_snapped(16, 16) &amp;&amp; (direction == 0 || direction == 180) &amp;&amp; change == 0)
        {
            if (keyboard_check(vk_up) &amp;&amp; (!keyboard_check(vk_down)) &amp;&amp; change == 0)
            {
                direction = 90
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else if ((!keyboard_check(vk_up)) &amp;&amp; keyboard_check(vk_down) &amp;&amp; change == 0)
            {
                direction = 270
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else
            {
                direction = 90
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
        }
    }
    else if (vrb &amp;&amp; bbox_left == vrb.bbox_left &amp;&amp; vrb.bbox_right == bbox_right &amp;&amp; (bbox_left != hrb.bbox_left || hrb.bbox_right != bbox_right) &amp;&amp; (direction == 0 || direction == 180) &amp;&amp; place_snapped(16, 16) &amp;&amp; change == 0)
    {
        if (keyboard_check(vk_up) &amp;&amp; bbox_top != vrb.bbox_top)
        {
            direction = 90
            move_snap(16, 16)
            change = 1
            alarm[0] = 3
        }
        else if (keyboard_check(vk_down) &amp;&amp; bbox_bottom != vrb.bbox_bottom)
        {
            direction = 270
            move_snap(16, 16)
            change = 1
            alarm[0] = 3
        }
    }
}
if vrb
{
    if (bbox_bottom &gt;= vrb.bbox_bottom &amp;&amp; direction == 270 &amp;&amp; place_snapped(16, 16))
    {
        if (hrb &amp;&amp; bbox_left == hrb.bbox_left &amp;&amp; place_snapped(16, 16))
        {
            direction = 0
            move_snap(16, 16)
        }
        else if (hrb &amp;&amp; bbox_right == hrb.bbox_right &amp;&amp; place_snapped(16, 16))
        {
            direction = 180
            move_snap(16, 16)
        }
        else if (hrb &amp;&amp; place_snapped(16, 16) &amp;&amp; (direction == 90 || direction == 270) &amp;&amp; change == 0)
        {
            if (keyboard_check(vk_left) &amp;&amp; (!keyboard_check(vk_right)))
            {
                direction = 180
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else if ((!keyboard_check(vk_left)) &amp;&amp; keyboard_check(vk_right))
            {
                direction = 0
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else
            {
                direction = 0
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
        }
    }
    else if (bbox_top &lt;= vrb.bbox_top &amp;&amp; direction == 90 &amp;&amp; place_snapped(16, 16))
    {
        if (hrb &amp;&amp; bbox_left == hrb.bbox_left &amp;&amp; place_snapped(16, 16))
        {
            direction = 0
            move_snap(16, 16)
        }
        else if (hrb &amp;&amp; bbox_right == hrb.bbox_right &amp;&amp; place_snapped(16, 16))
        {
            direction = 180
            move_snap(16, 16)
        }
        else if (hrb &amp;&amp; place_snapped(16, 16) &amp;&amp; (direction == 90 || direction == 270) &amp;&amp; change == 0)
        {
            if (keyboard_check(vk_left) &amp;&amp; (!keyboard_check(vk_right)))
            {
                direction = 180
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else if ((!keyboard_check(vk_left)) &amp;&amp; keyboard_check(vk_right))
            {
                direction = 0
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
            else
            {
                direction = 0
                move_snap(16, 16)
                change = 1
                alarm[0] = 3
            }
        }
    }
    else if (hrb &amp;&amp; bbox_top == hrb.bbox_top &amp;&amp; hrb.bbox_bottom == bbox_bottom &amp;&amp; (direction == 90 || direction == 270) &amp;&amp; bbox_top != vrb.bbox_top &amp;&amp; vrb.bbox_bottom != bbox_bottom &amp;&amp; place_snapped(16, 16) &amp;&amp; change == 0)
    {
        if (keyboard_check(vk_right) &amp;&amp; bbox_right != hrb.bbox_right)
        {
            direction = 0
            move_snap(16, 16)
        }
        else if (keyboard_check(vk_left) &amp;&amp; bbox_left != hrb.bbox_left)
        {
            direction = 180
            move_snap(16, 16)
        }
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crear un jugador del otro lado
with (player_retrieve(bbox_left+16,bbox_top-2)) //(instance_create((bbox_left + 16), (bbox_top - 2), obj_player))
{
    hspeed = other.hsp
    vspeed = other.vsp
}
audio_play_sound(snd_clearpipe_pop, 0, false)
audio_stop_sound(snd_clearpipe_in)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crea a un jugador del otro lado
with (player_retrieve(bbox_left+16,bbox_top-2)) //(instance_create((bbox_left + 16), (bbox_top-2), obj_player))
{
    hspeed = other.hsp
    vspeed = other.vsp
}
audio_play_sound(snd_clearpipe_pop, 0, false)
audio_stop_sound(snd_clearpipe_in)
instance_destroy()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Se dibuja la wea
draw_sprite_ext(scr_marioclearpipe(), spr, round((bbox_left + 16)), round((bbox_top + 16)), 1, 1, dir, blend_star, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
